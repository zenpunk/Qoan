# =============================================================================
# Shiro configuration
#
# We want to use the database described below for security
# =============================================================================

# -----------------------------------------------------------------------------
# Users and their (optional) assigned roles
# username = password, role1, role2, ..., roleN
# -----------------------------------------------------------------------------
[users]
root = secret, admin
guest = guest, guest
#presidentskroob = 12345, president
#darkhelmet = ludicrousspeed, darklord, schwartz
#lonestarr = vespa, goodguy, schwartz

# -----------------------------------------------------------------------------
# Roles with assigned permissions
# roleName = perm1, perm2, ..., permN
# -----------------------------------------------------------------------------
[roles]
admin = *
#schwartz = lightsaber:*
#goodguy = winnebago:drive:eagle5

[main]
# Own Realm
jdbcRealm = qube.qai.security.QaiRealm

# User Query
#jdbcRealm.authenticationQuery = "SELECT password FROM User where username = ?"

# permissions
#jdbcRealm.permissionsLookupEnabled = true
#jdbcRealm.userRolesQuery = SELECT name FROM Role WHERE userId = ?
#jdbcRealm.permissionsQuery = SELECT role FROM Role where userId = ?

# Connection
ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = 192.168.1.7:3306
ds.user = sa
ds.password = sa
ds.databaseName = users
jdbcRealm.dataSource = $ds

#authc.usernameParam = username
#authc.passwordParam = password
#authc.failureKeyAttribute = shiroLoginFailure

#jdbcRealm = qube.qai.security.QaiRealm
#jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealmCredentialsMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
jdbcRealm.credentialsMatcher = $jdbcRealmCredentialsMatcher

#ps = org.apache.shiro.authc.credential.DefaultPasswordService
#pm = org.apache.shiro.authc.credential.PasswordMatcher
#pm.passwordService = $ps

#jdbcRealm.dataSource = $ds
#jdbcRealm.credentialsMatcher = $pm
#shiro.loginUrl = /api/login

# Use Built-in Chache Manager
#builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
#securityManager.cacheManager = $builtInCacheManager

#securityManager.realms = $jdbcRealm

# Apache Shiro v1.2.3

# Install MySQL
# $ sudo yum install mysql-server
# $ sudo /sbin/service mysqld start
# $ sudo chkconfig mysqld on

# Secure install and set root password
# $ sudo /usr/bin/mysql_secure_installation

# Login to MySQL, create database, user, tables
# Note these tables are the default names and columns the JdbcRealm uses to query,
# you can change them if you want and set these parameters.  See the JdbcRealm docs.
# $ mysql -u root -p
# mysql> CREATE DATABASE zeppelin;
# mysql> USE zeppelin;
# mysql> CREATE USER 'zeppelin'@'localhost' IDENTIFIED BY 'zeppelin';
# mysql> CREATE TABLE users (username TEXT, password TEXT, password_salt TEXT);
# mysql> CREATE TABLE user_roles (username TEXT, role_name TEXT);
# mysql> CREATE TABLE user_permissions (username TEXT, permission TEXT);
# mysql> GRANT ALL PRIVILEGES ON zeppelin.users TO 'zeppelin'@'localhost';
# mysql> GRANT ALL PRIVILEGES ON zeppelin.user_roles TO 'zeppelin'@'localhost';
# mysql> GRANT ALL PRIVILEGES ON zeppelin.user_permissions TO 'zeppelin'@'localhost';

# And this would be your shiro.ini config information.
# A little more security on the password, if it pleases you.
# This uses Shiro's Hasher tool for authentication. A user can execute the tool,
# then insert the hash into the database like so. See http://shiro.apache.org/command-line-hasher.html.
# mysql> INSERT INTO users (username, password) ('admin', '$shiro1$SHA-256$500000$MyEBDTd1z+74tcHmJ2hAww==$hJOLtaAlCC/BUjLGCCT9yPZrB/rhiyGPunbs61pPevs=');

#[main]
#ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
#ds.serverName = localhost
#ds.databaseName = zeppelin
#ds.user = zeppelin
#ds.password = zeppelin

#jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
#jdbcRealmCredentialsMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
#jdbcRealm.credentialsMatcher = $jdbcRealmCredentialsMatcher

#ps = org.apache.shiro.authc.credential.DefaultPasswordService
#pm = org.apache.shiro.authc.credential.PasswordMatcher
#pm.passwordService = $ps

#jdbcRealm.dataSource = $ds
#jdbcRealm.credentialsMatcher = $pm
#shiro.loginUrl = /api/login